name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    name: Building on ${{ matrix.os }} with ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cabal: latest
            ghc: "8.10.7"
              # - os: macos-latest
              #   cabal: latest
              #   ghc: "8.10.7"
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Setup Haskell (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        ghcup install ghc \
          --url https://github.com/twesterhout/ghc-fpic-bindist/releases/download/v0.0.1/ghc-${{ matrix.ghc }}-x86_64-linux-ubuntu-18.04-c826a40e.tar.xz \
          --force \
          ${{ matrix.ghc }}
    - uses: actions/cache@v3
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal
    - name: Install system dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends ninja-build libhdf5-dev libnuma-dev
    - name: Install system dependencies
      if: matrix.os == 'macos-latest'
      run: |
        brew install libomp hdf5 
        # - name: Build lattice-symmetries
        #   run: |
        #     mkdir -p third_party
        #     cd third_party
        #     git clone --recursive https://github.com/twesterhout/lattice-symmetries.git
        #     cd lattice-symmetries
        #     cmake -Bbuild \
        #           -DCMAKE_BUILD_TYPE=Release \
        #           -DBUILD_SHARED_LIBS=ON \
        #           -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/lattice-symmetries \
        #           -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
        #           -DLatticeSymmetries_ENABLE_UNIT_TESTING=OFF
        #     cmake --build build -j4
        #     cmake --build build --target install
        #     cd ..
        # - name: Start SSH session
        #   if: matrix.os == 'macos-latest'
        #   uses: luchihoratiu/debug-via-ssh@main
        #   with:
        #     NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        #     SSH_PASS: ${{ secrets.SSH_PASS }}
    - name: Build Haskell dependencies
      run: |
        cabal v2-update
        cabal v2-build --only-dependencies --enable-tests --hsc2hs-options=--cross-compile
    - name: Build
      run: |
        # export PKG_CONFIG_PATH=$GITHUB_WORKSPACE/lattice-symmetries/lib/pkgconfig
        cd kernels
        make Halide
        make
        cd ..

        cabal v2-build --extra-lib-dirs=$PWD/kernels/build --hsc2hs-options=--cross-compile
        # --flags="-use-standalone"
    - name: Test
      run: |
        export LD_LIBRARY_PATH=$PWD/kernels/build:$LD_LIBRARY_PATH
        export DYLD_LIBRARY_PATH=$PWD/kernels/build:$DYLD_LIBRARY_PATH
        cabal v2-test --extra-lib-dirs=$PWD/kernels/build --hsc2hs-options=--cross-compile --test-show-details=direct
        # --flags="-use-standalone"
    - name: Package
      # if: matrix.os == 'macos-latest'
      run: |
        mkdir release
        mkdir release/include
        mkdir release/lib
        # cp $GITHUB_WORKSPACE/lattice-symmetries/lib/liblattice_symmetries.$SHARED_LIB_EXTENSION release/lib/
        # cp -r $GITHUB_WORKSPACE/lattice-symmetries/include/lattice_symmetries release/include/
        cp cbits/lattice_symmetries_haskell.h release/include/
        export GHC_VERSION=$(ghc --numeric-version)
        export PACKAGE_VERSION=0.1.0.0
        if [[ ${{ matrix.os }} == "macos-latest" ]]; then
          export SHARED_LIB_EXTENSION=dylib
          export CABAL_OS_NAME=osx
        else
          export SHARED_LIB_EXTENSION=so
          export CABAL_OS_NAME=linux
        fi
        cp kernels/build/liblattice_symmetries_core.$SHARED_LIB_EXTENSION release/lib/
        find dist-newstyle -name "liblattice_symmetries_haskell.$SHARED_LIB_EXTENSION" \
                           -exec cp {} release/lib/ \;
        # cp dist-newstyle/build/x86_64-$CABAL_OS_NAME/ghc-$GHC_VERSION/lattice-symmetries-haskell-$PACKAGE_VERSION/f/lattice_symmetries_haskell/opt/build/lattice_symmetries_haskell/liblattice_symmetries_haskell.$SHARED_LIB_EXTENSION release/lib/
        tar -cf release.tar release/
        bzip2 release.tar

    - uses: actions/upload-artifact@v3
      # if: matrix.os == 'macos-latest'
      with:
        name: chapel-dependencies-${{ matrix.os }}
        path: release.tar.bz2
