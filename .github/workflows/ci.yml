name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    name: Building on ${{ matrix.os }} with ghc-${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            cabal: latest
            ghc: "8.10.7"
          - os: macos-latest
            cabal: latest
            ghc: "8.10.7"
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
    - name: Install GHC with -fPIC on Linux
      if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-latest'
      run: |
        ghcup install ghc \
          --url https://github.com/twesterhout/ghc-fpic-bindist/releases/download/v0.0.2/ghc-${{ matrix.ghc }}-x86_64-linux-ubuntu-18.04-b6241f3a.tar.xz \
          --force \
          ${{ matrix.ghc }}
    - uses: actions/cache@v3
      if: matrix.os == 'macos-latest'
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-latest'
      run: |
        # sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libnuma-dev libgmp-dev
    - name: Install system dependencies (MacOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install libomp
    - name: Build HDF5
      run: |
        make hdf5 pkgconfig
    - name: Build C code
      run: |
        cd kernels
        make Halide
        make
        cd ..
    - name: Build Haskell code
      run: |
        export PKG_CONFIG_PATH=$PWD/third_party/hdf5/lib/pkgconfig
        cabal v2-clean
        cabal v2-build
        # --extra-lib-dirs=$PWD/kernels/build --hsc2hs-options=--cross-compile --flags="+use-standalone"
        # --extra-lib-dirs=$PWD/third_party/hdf5/lib --extra-include-dirs=$PWD/third_party/hdf5/include 
    - name: Test
      run: |
        export LD_LIBRARY_PATH=$PWD/kernels/build:$LD_LIBRARY_PATH
        export DYLD_LIBRARY_PATH=$PWD/kernels/build:$DYLD_LIBRARY_PATH
        cabal v2-test --test-show-details=direct
        # --extra-lib-dirs=$PWD/third_party/hdf5/lib --hsc2hs-options=--cross-compile --flags="+use-standalone"
        # --extra-include-dirs=$PWD/third_party/hdf5/include --extra-lib-dirs=$PWD/kernels/build
    - name: Package
      run: |
        mkdir release
        mkdir release/include
        mkdir release/lib
        cp cbits/lattice_symmetries_haskell.h release/include/
        if [[ ${{ matrix.os }} == "macos-latest" ]]; then
          export SHARED_LIB_EXTENSION=dylib
        else
          export SHARED_LIB_EXTENSION=so
        fi
        cp kernels/build/liblattice_symmetries_core.$SHARED_LIB_EXTENSION release/lib/
        find dist-newstyle -name "liblattice_symmetries_haskell.$SHARED_LIB_EXTENSION" \
                           -exec cp {} release/lib/ \;
        tar -cf chapel-dependencies-${{ matrix.os }}.tar release/
        bzip2 chapel-dependencies-${{ matrix.os }}.tar

    - uses: actions/upload-artifact@v3
      with:
        name: chapel-dependencies-${{ matrix.os }}
        path: chapel-dependencies-${{ matrix.os }}.tar.bz2
